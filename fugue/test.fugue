data Maybe a = Just a | Nothing;

x = Just 1;
y = Nothing;

f x = case x of
  Just a -> a,
  Nothing -> 0;

data Either a = Left a | Right a;

to_bool x = case x of
  Left a -> True,
  Right a -> False;

data Pair a = Pair a a;

data Tree a = Leaf a | Node (Tree a) (Tree a);

t = Node
      (Node
		(Leaf 1)
		(Node
		  (Leaf 2)
		  (Leaf 3)))
	  (Node
	    (Leaf 4)
		(Leaf 5));

max a b = if a > b then a else b;

height t = case t of
  Leaf v -> 1,
  Node l r -> 1 + max (height l) (height r);

f x = case x of
  Nothing -> ?,
  Just n -> n + 1;